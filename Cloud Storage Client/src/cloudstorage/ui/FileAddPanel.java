/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cloudstorage.ui;

import cloudstorage.communicator.GoogleDriveCommunicator;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.activation.MimetypesFileTypeMap;
import javax.swing.DefaultListModel;
import megatherium.application.Application;
import megatherium.communicator.data.Account;
import megatherium.data.store.AccountStore;
import megatherium.data.store.Stores;
import megatherium.ui.EventPanel;
import megatherium.util.FileUtil;
import megatherium.util.ReportUtil;

/**
 *
 * @author SargTeX
 */
public class FileAddPanel extends EventPanel {
	private File[] files;
	public void setFiles(File[] files) {
		this.files = files;
		
		// generate information string
		StringBuilder information = new StringBuilder();
		information.append(files.length+"").append(" Datei");
		if (files.length != 1) information.append("en");
		information.append(" (").append(FileUtil.getFileSize(files)/1048576).append("MB)");
		
		// load account list
		((DefaultListModel) this.jList1.getModel()).clear();
		for (Account account : Stores.get("accountStore", AccountStore.class).getItems())
			((DefaultListModel<Account>) this.jList1.getModel()).addElement(account);
	}

	/**
	 * Creates new form FileAddPanel
	 */
	public FileAddPanel() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileInformation = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();

        fileInformation.setText("jLabel2");

        jLabel1.setText("Dateien:");

        jLabel2.setText("Konten:");

        jList1.setModel(new DefaultListModel<Account>());
        jScrollPane1.setViewportView(jList1);

        jButton1.setText("Upload");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fileInformation)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fileInformation))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jList1.getSelectedValue() == null) {
			Application.getController().showNotification("Bitte wähle zunächst einen Account aus.");
			return;
		}
		
		// upload files
		for (File file : files) {
			System.out.println("Uploading file: "+file.getAbsolutePath());
			
			// upload file in any of the selected accounts
			for (Object obj : jList1.getSelectedValuesList()) {
				try {
					GoogleDriveCommunicator.getInstance((Account) obj).upload(file.getName(), "", new MimetypesFileTypeMap().getContentType(file), file.getAbsolutePath());
				} catch (IOException ex) {
					ReportUtil.getInstance().add(ex);
				}
			}
		}
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fileInformation;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
