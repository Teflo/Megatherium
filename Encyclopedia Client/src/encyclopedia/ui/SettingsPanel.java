/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package encyclopedia.ui;

import encyclopedia.Encyclopedia;
import java.awt.List;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import megatherium.application.Application;
import megatherium.communicator.data.Platform;
import megatherium.config.Config;
import megatherium.data.store.PlatformStore;
import megatherium.data.store.Stores;
import megatherium.event.EventManager;
import megatherium.ui.EventPanel;

/**
 *
 * @author marti_000
 */
public class SettingsPanel extends EventPanel {

	/**
	 * Creates new form SettingsPanel
	 */
	public SettingsPanel() {
		initComponents();
		initData();
	}
	
	private void initData() {
		// set results per platform
//		this.resultsPerPlatform.setValue(Config.get("encyclopedia.resultsPerPlatform", int.class));
		
		// load encyclopedia list
		Platform[] platforms = Stores.get("platform", PlatformStore.class).getByType("encyclopedia");
		encyclopediaList.setListData(platforms);
		
		// load selected encyclopedias
		java.util.List<String> selected = Config.get("encyclopedia.activePlatforms", new ArrayList<String>().getClass());
		int[] positions = new int[selected.size()];
		int j = 0;
		for (String name : selected) {
			for (int i = 0; i < platforms.length; ++i) {
				if (platforms[i].getName().equals(name)) {
					positions[j] = i;
					break;
				}
			}
			++j;
		}
		
		// set selected indices
		encyclopediaList.setSelectedIndices(positions);
	}
	
	private void save() {
		// set results per platform
//		Config.set("encyclopedia.resultsPerPlatform", this.resultsPerPlatform.getValue(), int.class);
		
		// set platforms
		java.util.List<String> platformList = new ArrayList<String>();
		for (Object platform : encyclopediaList.getSelectedValuesList()) platformList.add(((Platform) platform).getName());
		Config.set("encyclopedia.activePlatforms", platformList.toArray(new String[]{}), new String[]{}.getClass());
		Encyclopedia.setEncyclopedias(platformList.toArray(new String[]{}));
		
		// call
		Application.getController().showNotification("Die Einstellungen wurden erfolgreich gespeichert.");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        encyclopediaList = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        resultsPerPlatform = new javax.swing.JSpinner();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        encyclopediaList.setBorder(javax.swing.BorderFactory.createTitledBorder("Zu duchrsuchende Enzyklopädien"));
        encyclopediaList.setModel(new DefaultListModel<Platform>());
        jScrollPane1.setViewportView(encyclopediaList);

        jButton1.setText("Speichern");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Ergebnisse pro Enzyklopädie:");

        resultsPerPlatform.setValue(3);

        jButton2.setText("Anwenden");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Abbrechen");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(resultsPerPlatform, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(resultsPerPlatform, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        save();
		EventManager.getInstance().fireEvent("encyclopedia.ui.settings.close");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        save();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        EventManager.getInstance().fireEvent("encyclopedia.ui.settings.cancel");
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList encyclopediaList;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner resultsPerPlatform;
    // End of variables declaration//GEN-END:variables
}
