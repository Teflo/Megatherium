/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sargtex.gui.lordsandknights.bot;

import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.JOptionPane;
import sargtex.config.lordsandknights.Config;
import sargtex.crse.data.lordsandknights.Game;
import sargtex.crse.data.lordsandknights.Habitat;
import sargtex.gui.lordsandknights.SelectHabitatTableModel;

/**
 *
 * @author Pathos
 */
public class AutoFillDialog extends javax.swing.JDialog {
	private Habitat habitat;
	private Habitat[] habitats;
	private Habitat[] selectedHabitats;

	/**
	 * Creates new form AutoFillDialog
	 */
	public AutoFillDialog(Habitat habitat, Habitat[] habitats, java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		this.habitat = habitat;
		this.habitats = habitats;
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new SelectHabitatTableModel(habitats));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Ausw√§hlen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(0, 24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		int count = 0;
		for (int i = 0; i < habitats.length; ++i) if ((Boolean) jTable1.getModel().getValueAt(i, 2)) ++count;
		
		// save selected habitats
		selectedHabitats = new Habitat[count];
		int j = 0;
		for (int i = 0; i < habitats.length; ++i) if ((Boolean) jTable1.getModel().getValueAt(i, 2)) {
			selectedHabitats[j] = habitats[i];
			++j;
		}
		
		// save this shit to the config
		for (int i = 0; i < selectedHabitats.length; ++i) {
			Config.getInstance().addHabitatAttack(habitat, selectedHabitats[i]);
		}
		
		// show notification
		JOptionPane.showMessageDialog(this, count+" Angriffsziele gespeichert");
		
		// close this window
		this.dispose();
	}//GEN-LAST:event_jButton1ActionPerformed

	/**
	 * Returns the list of selected habitats.
	 * 
	 * @return the habitat list
	 */
	public Habitat[] getSelectedHabitats() {
		return this.selectedHabitats;
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
